#include <iostream>
#include <conio.h>
#include <string> //Библиотека для работы со строками в потоке
#include <fstream> //Библиотека для работы с потоками
#include <regex> //Библиотека для работы регулярных выражений
#include <vector>  //Библиотека для работы с динамическими массивами

using namespace std; //Подключить пространство имен std

vector <string> vct;
char path_to_file[100];

/*Эта функция читает файл выводит содержимое.
На входе путь к файлу, на выходе - множество строк*/
void input()
{
	string line;
	cout << "Введите путь к файлу: " << endl;
	cin >> path_to_file;
	cout << "Исходный текст: " << endl;
	ifstream in(path_to_file); //Открыть файл для работы
	{
		while (getline(in, line)) //Пока не конец файла, построчно выводить
		{
			cout << line << endl; //Выводить строки из файла
		}
	}
	in.close(); //Закрыть файл в потоке
}

/*Эта функция разделяет слова по наличию пробелов.
На входе путь к файлу, на выходе строковый вектор слов.*/
void tokens()
{
	cout << "Отдельные слова, разделяемые пробелами: " << endl;
	string line;
	ifstream in(path_to_file); //Открыть файл для работы
	regex rgx{ "[\\S]+" }; //Задать условие разделения на последовательности положительных и отрицательных цифр
	while (getline(in, line)) //Пока не конец строки в потоке, выполнять
	{
		copy(sregex_token_iterator{ line.begin(), line.end(), rgx }, {}, back_inserter(vct)); //Сепарировать последовательность согласно условию и вносить в массив
	}
	in.close(); //Закрыть файл
	copy(vct.begin(), vct.end(), ostream_iterator<string>{cout, "\n"}); //Вывести массив токенов
}

/*Эта функция принимает и ищет слово в вектор слов.
На входе - слово для поиска и вектор слов, на выходе -
сообщение и файл с найденным словом.*/
void searchword()
{
	cout << "Введите слово для поиска в файле: " << endl;
	string search;
	int count = 0;
	cin >> search;
	for (int i = 0; i < vct.size(); i++) //От первого элемента вектора до последнего, выполнять
	{
		if (vct[i] == search) //Если элемент вектора совпал с искомым словом, то
			count++; //Инкрементировать счетчик
	}
	if (count != 0) //Если счетчик не равен нулю, то
	{
		cout << "Слово" << search << "упоминается в тексте " << count << " раз" << endl; //Вывести сообщение с количеством совпадений
		ofstream ofs("result.txt"); //Создать файл в потоке
		ofs << search; //Внести в файл найденное слово
		ofs.close(); //Закрыть файл
	}
	else //Иначе
		cout << "Слово " << search << " не упоминается в тексте" << endl; //Вывести сообщение об отсутствии заданного слова в текстк
}

/*Это главная функция программы*/
int main()
{
	setlocale(LC_ALL, "Russian"); //Установить русский язык в консоли
	input(); //Запустить на выполнение подпрограмму input()
	tokens(); //Запустить на выполнение подпрограмму tokens()
	searchword(); //Запустить на выполнение подпрограмму searchword()
	_getch(); //Задержать окно программы
	return 0; //Вернуть 0
}
