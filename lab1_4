#include <iostream> //Главная библиотека
#include <regex> //Библиотека работы с регулярными выражениями
#include <string> //Библиотека работы со строками
#include <conio.h> //Библиотека для работы с _getch()
#include <fstream> //Библиотека для работы с потоками
#include <numeric> //Библиотека арифметических операций над векторами

using namespace std; //Использовать пространство имен std

string inputdata; //Переменная входной последовательности
vector <int> digits; //Динамический целочисленный массив

template <class T> //Шаблон для определения функций
/*Эта Функция mul типа T принимает два параметра x и y*/
T mul(T x, T y)
{
	return x*y; //Вернуть произведение
}

/*Эта функция получает строку из консоли, обрабатывает ее с помощью 
регулярных выражений и возвращает динамический массив с числами */
void input()
{
	cout << "Введите числа через разделитель(запятую,точку): "; //Вывести сообщение
	cin >> inputdata; //Принять значение с консоли и занести в переменную
	/*Использовать регулярные выражения для сепарации строки*/
	regex rgx{ "[-[:digit:]]+" }; //Задать условие разделения на последовательности положительных и отрицательных цифр
	vector<ssub_match> vct; //Задать массив обработки 
	copy(sregex_token_iterator{ inputdata.begin(), inputdata.end(), rgx }, {}, back_inserter(vct)); //Сепарировать последовательность согласно условию и вносить в массив
	for (int i = 0; i < vct.size(); i++) //Перебрать все значения динамического массива
	{
			digits.push_back(stoi(vct[i])); //Преобразовать элемент массива строк в число и добавить в целочисленный массив
	}
}

/*Эта функция получает диначмиеский массив чисел и производит математические вычисления*/
void calculation()
{
	cout << "Сумма чисел: " << accumulate(digits.begin(), digits.end(), 0) << endl; //Просуммировать и вывести сумму элементов вектора
	cout << "Произведение чисел: " << accumulate(digits.begin(), digits.end(), 1.0, mul<double>) << endl; //Выполнить умножение и вывести сумму элементов вектора
}

/*Это главная функция программы*/
int main()
{
	setlocale(LC_ALL, "Russian"); //Задать русский язык в консоли
	input(); //Запустить выполнение функции void input()
	calculation(); //Запустить выполнение функции void calculation()
	_getch(); //Задержать окно консоли
	return 0; //Вернуть 0
}
