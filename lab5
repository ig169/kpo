unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, msxml, Xml.xmldom,
  Xml.XMLIntf, Xml.Win.msxmldom, Xml.XMLDoc, Vcl.OleCtrls, SHDocVw;

type
  TForm1 = class(TForm)
    Label1: TLabel;
    Edit1: TEdit;
    Label2: TLabel;
    Edit2: TEdit;
    OpenDialog1: TOpenDialog;
    OpenDialog2: TOpenDialog;
    Button1: TButton;
    Memo1: TMemo;
    Button2: TButton;
    XML: TXMLDocument;
    procedure Edit1Click(Sender: TObject);
    procedure Edit2Click(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;
  path_to_xml, path_to_xsd : string;

implementation

{$R *.dfm}

{Эта процедура формирует коллекцию на вывод}
procedure FillList(X: TStrings; _N: IXMLNode);
var i: integer;
    tN: IXMLNode;
begin
  for i := 0 to _N.ChildNodes.Count - 1 do
    begin
      tN := _N.ChildNodes.Nodes[i];
      if tN.NodeName = '#text' then continue;
      if tN.ChildNodes.Count = 1 then
        X.Add(Format('%s = %s', [tN.NodeName, tN.ChildValues[1]]))
      else
        begin
          X.Add(tN.NodeName + ':=====');
          FillList(X, tN);
          X.Add('=====');
        end;
    end;
end;

{Эта процедура обрабатывает клик на кнопку и проверяет валидность}
procedure TForm1.Button1Click(Sender: TObject);
var
  vXMLParserError: IXMLDOMParseError2;
  vXMLSchema: IXMLDOMSchemaCollection2;
  vXMLDoc: IXMLDOMDocument2;
  vXMLSchemaDoc: IXMLDOMDocument2;
  vStrs: TStringList;
  CodError:IXMLDOMParseErrorCollection;
   i : Integer;
begin
  vStrs := TStringList.Create();
  try
    //Загрузка схемы
    vXMLSchema := CoXMLSchemaCache60.Create();
    vXMLSchemaDoc := CoDOMDocument60.Create();
    vStrs.LoadFromFile(path_to_xsd);
    vXMLSchemaDoc.loadXML( vStrs.Text );
    if vXMLSchemaDoc.parseError.errorCode <> 0 then
      begin
        ShowMessage(Format('Ошибка при загрузке схемы <%s: %s>', [vXMLSchemaDoc.parseError.reason, vXMLSchemaDoc.parseError.srcText]));
        Exit;
      end;
    vXMLSchema.add('', vXMLSchemaDoc);
//Загрузка документа
    vXMLDoc := CoDOMDocument60.Create();
    vXMLDoc.async := False;
    vXMLDoc.resolveExternals := false;
    vXMLDoc.validateOnParse := false;
    vXMLDoc.setProperty('MultipleErrorMessages',true);
    vStrs.Clear();
    vStrs.LoadFromFile(path_to_xml);
    vXMLDoc.loadXML( vStrs.Text );
    vXMLDoc.schemas := vXMLSchema;
    vXMLParserError := vXMLDoc.validate as IXMLDOMParseError2;
    Memo1.Clear;
    if vXMLParserError.errorCode <> 0 then
      begin
         CodError := vXMLParserError.allErrors;
         for I := 0 to CodError.length-1 do
        begin
        Memo1.Lines.Add(CodError.item[i].reason);
        Memo1.Lines.Add('*****');
        end;
      end
    else
      ShowMessage( 'Валидация документа прошла успешно' );
  finally
    FreeAndNil( vStrs );
  end;
end;

{Эта процедура обрабатывает событие клика на кнопку и вывода распарсенного содержимого}
procedure TForm1.Button2Click(Sender: TObject);
var Root, N: IXMLNode;
    i: integer;
    L: TStringList;
begin
  XML.FileName := path_to_xml;
  XML.Active := true;
  Root := XML.ChildNodes.Nodes[0];
  L := TStringList.Create;
  for i := 0 to Root.ChildNodes.Count - 1 do
    begin
      N := Root.ChildNodes.Nodes[i];
      L.Add(N.GetAttribute('name'));
      FillList(L, N);
      L.Add('++++++++++++++++++++++');
      L.Add(' ');
    end;
  Memo1.Lines.Assign(L);
  L.Free;
end;

procedure TForm1.Edit1Click(Sender: TObject);
begin
if openDialog1.Execute then
begin
//Работа с файлом
 openDialog1.FileName;
 path_to_xml:=OpenDialog1.FileName;
 Edit1.Text:=path_to_xml;
end;
end;

{Эта процедура проучает путь к файлу XSD}
procedure TForm1.Edit2Click(Sender: TObject);
begin
if openDialog2.Execute then
begin
//Работа с файлом
 openDialog2.FileName;
 path_to_xsd:=OpenDialog2.FileName;
 Edit2.Text:=path_to_xsd;
end;
end;

end.
