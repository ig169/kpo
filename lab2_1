#include <iostream>
#include <conio.h>
#include <string> //Библиотека для работы со строками в потоке
#include <fstream> //Библиотека для работы с потоками
#include <regex> //Библиотека для работы регулярных выражений
#include <vector>  //Библиотека для работы с динамическими массивами

using namespace std; //Поделючить пространство имен std

vector <string> vct; //Задать массив обработки 

/*Эта функция читает файл и заносит его содержимое в строковый вектор.
На выходе путь к файлу, на выходе вектор с содержимым файла.*/
void textseparator()
{
	regex rgx{ "[\\S]+" }; //Задать условие разделения на последовательности положительных и отрицательных цифр
	char path_to_file[100]; 
	string line;
	cout << "Введите путь к файлу: " << endl;
	cin >> path_to_file;
	cout << "Исходный текст: " << endl;
	ifstream in(path_to_file); //Открыть файл для работы
	{
		while (getline(in, line)) //Пока не конец файла, построчно выводить
		{
			cout << line << endl; //Выводить строки из файла
			copy(sregex_token_iterator{ line.begin(), line.end(), rgx }, {}, back_inserter(vct)); //Сепарировать последовательность согласно условию и вносить в массив
		}
	}
	in.close(); //Закрыть файл
}

/*Эта функция осуществляет поиск совпадений условия в векторе строк.
На входе вектор строк, на выходе - элементы вектора */
void searcher()
{
	cout << "Совпадения: " << endl; //Вывести сообщение
	for (int i = 0; i < vct.size()-1; i++) //От 1 до последнего элемента цикла выполнять
	{
		if (vct.at(i)[vct.at(i).size() - 1] == vct.at(i+1)[0]) //Если последний символ текущего слова равен первому символу следующего слова, то
		{
			cout << vct[i] << " " << vct[i+1] << endl; //Вывести оба слова
		}
	}
}

/*Это главная функция программы*/
int main()
{
	setlocale(LC_ALL, "Russian"); //Установить русский язык в консоли
	textseparator(); //Запустить выполнение функции void textseparator();
	searcher(); //Запустить выполнение функции void searcher();
	_getch(); //Задержать окно консоли
	return 0; //Вернуть 0
}
