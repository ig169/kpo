using System;
using System.Collections.Generic;

namespace ConsoleApp1
{
    class Program
    {
        static void Main(string[] args)
        {
            //входное слово
            var in_string = "ABABAC";
            //начальное состояние
            var current_state = 0;
            //создние массива, который будет использоваться в качестве стека
            var stack = new List<string>();
            //состояние автомата
            int state = 0;
            for (int i = 0; i < in_string.Length; i++)
            {
                current_state = newState(current_state, in_string[i]);
            }
            //вывод результата
            Console.WriteLine("Входная строка: ");
            Console.WriteLine(in_string);
            Console.WriteLine("<br/>");
            Console.WriteLine("Конечное состояние: ");
            Console.WriteLine(current_state);
        }

        public object newState(int state, string literal)
        {
            var result = 0;
            switch (state)
            {
                case 0:
                    switch (literal) 
                      {
                    case "A":
                    result = 1;
                    break;
                case "B":
                case "C":
                    result = 0;
                    break;
                default:
                    break;
            }
            break;
            case 1:
                switch (literal)
                {
                case "A":
                    result = 1;
                    break;
                case "B":
                    result = 2;
                    break;
                case "C":
                    result = 0;
                    break;
                default:
                    break;
                }
            break;
            case 2:
                switch (literal)
                {
                case "A":
                    result = 3;
                    break;
                case "B":
                case "C":
                    result = 0;
                    break;
                default:
                    break;
                }
            break;
            case 3:
                switch (literal)
                {
                case "A":
                    result = 1;
                    break;
                case "B":
                    result = 4;
                    break;
                case "C":
                    result = 0;
                    break;
                default:
                    break;
                }
            break;
            case 4:
                switch (literal)
                {
                case "A":
                    result = 5;
                    break;
                case "B":
                case "C":
                    result = 0;
                    break;
                default:
                    break;
                }
            break;
            case 5:
                switch (literal)
                {
                case "A":
                    result = 1;
                    break;
                case "B":
                    result = 4;
                    break;
                case "C":
                    result = 6;
                    break;
                default:
                    break;
                }
            break;
        }
        return result;
    }
}


    public void getNewState(int literal)
    {
        Stack<int> stack = new Stack<int>();
        int state = 0;
        switch (state) 
        {
        case 0:
            if (literal == 0) 
                {
                    state = 1;
                    if (stack != null)
                    {
                        stack.Push(0);
                    }
                }   
            else if((literal == null) && (stack == null)) 
                {
                state = 3;
                }
            break;
        case 1:
            if (literal == 0) 
                {
                if (stack[(stack.Count - 1)] == 0) 
                    {
                        stack.Push(0);
                    }
                 }
            else if(literal == 1) 
                {
                if (stack[stack.Count - 1)] == 0) 
                {
                    state = 2;
                        stack.Pop();
                }
            }
            break;
        case 2:
            if (literal == 1) 
                {
                if (stack[stack.Count - 1)] == 0)
                    {
                        stack.Pop();
                    }
                }
            else if((literal == null) && (stack == null)) 
                {
                state = 3;
                }
            break;
        }
    }
}
